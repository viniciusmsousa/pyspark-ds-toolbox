
  Stack trace:

  11  ~/.poetry/lib/poetry/_vendor/py3.7/clikit/console_application.py:124 in run
      self, args, input_stream, output_stream, error_stream

  10  ~/.poetry/lib/poetry/console/config/application_config.py:221 in create_io
      resolved_command = application.resolve_command(args)

   9  ~/.poetry/lib/poetry/_vendor/py3.7/clikit/console_application.py:110 in resolve_command
      return self._config.command_resolver.resolve(args, self)

   8  ~/.poetry/lib/poetry/_vendor/py3.7/clikit/resolver/default_resolver.py:34 in resolve
      return self.create_resolved_command(result)

   7  ~/.poetry/lib/poetry/_vendor/py3.7/clikit/resolver/default_resolver.py:166 in create_resolved_command
      if not result.is_parsable():

   6  ~/.poetry/lib/poetry/_vendor/py3.7/clikit/resolver/resolve_result.py:43 in is_parsable
      self._parse()

   5  ~/.poetry/lib/poetry/_vendor/py3.7/clikit/resolver/resolve_result.py:49 in _parse
      self._parsed_args = self._command.parse(self._raw_args)

   4  ~/.poetry/lib/poetry/_vendor/py3.7/clikit/api/command/command.py:113 in parse
      return self._config.args_parser.parse(args, self._args_format, lenient)

   3  ~/.poetry/lib/poetry/_vendor/py3.7/clikit/args/default_args_parser.py:53 in parse
      self._parse(args, _fmt, lenient)

   2  ~/.poetry/lib/poetry/_vendor/py3.7/clikit/args/default_args_parser.py:103 in _parse
      self._parse_short_option(token, tokens, fmt, lenient)

   1  ~/.poetry/lib/poetry/_vendor/py3.7/clikit/args/default_args_parser.py:258 in _parse_short_option
      self._parse_short_option_set(name, tokens, fmt, lenient)

  NoSuchOptionException

  The "-d" option does not exist.

  at ~/.poetry/lib/poetry/_vendor/py3.7/clikit/args/default_args_parser.py:280 in _parse_short_option_set
      276│     ):  # type: (str, List[str], ArgsFormat, bool) -> None
      277│         l = len(name)
      278│         for i in range(0, l):
      279│             if not fmt.has_option(name[i]):
    → 280│                 raise NoSuchOptionException(name[i])
      281│ 
      282│             option = fmt.get_option(name[i])
      283│             if option.accepts_value():
      284│                 self._add_long_option(
